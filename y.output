Terminals unused in grammar

    DO
    CHAR
    DOUBLE
    DEFAULT
    CONTINUE
    CONST_CHAR
    STRING


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_start: type_specifier ID LPAREN parameter_list RPAREN
    8           | type_specifier ID LPAREN RPAREN

    9 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN RPAREN SEMICOLON

   11 func_definition: func_start compound_statement

   12 parameter_list: parameter_list COMMA type_specifier ID
   13               | parameter_list COMMA type_specifier
   14               | type_specifier ID
   15               | type_specifier

   16 compound_statement: compound_statement_start statements RCURL
   17                   | compound_statement_start RCURL

   18 compound_statement_start: LCURL

   19 var_declaration: type_specifier declaration_list SEMICOLON

   20 type_specifier: INT
   21               | FLOAT
   22               | VOID

   23 declaration_list: declaration_list COMMA ID
   24                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   25                 | ID
   26                 | ID LTHIRD CONST_INT RTHIRD

   27 statements: statement
   28           | statements statement

   29 statement: var_declaration
   30          | expression_statement
   31          | compound_statement
   32          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   33          | IF LPAREN expression RPAREN statement
   34          | IF LPAREN expression RPAREN statement ELSE statement
   35          | WHILE LPAREN expression RPAREN statement
   36          | PRINTLN LPAREN ID RPAREN SEMICOLON
   37          | RETURN expression SEMICOLON

   38 expression_statement: SEMICOLON
   39                     | expression SEMICOLON

   40 variable: ID
   41         | ID LTHIRD expression RTHIRD

   42 expression: logic_expression
   43           | variable ASSIGNOP logic_expression

   44 logic_expression: rel_expression
   45                 | rel_expression LOGICOP rel_expression

   46 rel_expression: simple_expression
   47               | simple_expression RELOP simple_expression

   48 simple_expression: term
   49                  | simple_expression ADDOP term

   50 term: unary_expression
   51     | term MULOP unary_expression

   52 unary_expression: ADDOP unary_expression
   53                 | NOT unary_expression
   54                 | factor

   55 factor: variable
   56       | ID LPAREN argument_list RPAREN
   57       | LPAREN expression RPAREN
   58       | CONST_INT
   59       | CONST_FLOAT
   60       | variable INCOP
   61       | variable DECOP

   62 argument_list: arguments
   63              | %empty

   64 arguments: arguments COMMA logic_expression
   65          | logic_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 33 34
    ELSE (259) 34
    FOR (260) 32
    WHILE (261) 35
    DO (262)
    INT (263) 20
    CHAR (264)
    FLOAT (265) 21
    DOUBLE (266)
    VOID (267) 22
    RETURN (268) 37
    DEFAULT (269)
    CONTINUE (270)
    ADDOP (271) 49 52
    MULOP (272) 51
    INCOP (273) 60
    RELOP (274) 47
    ASSIGNOP (275) 43
    LOGICOP (276) 45
    NOT (277) 53
    LPAREN (278) 7 8 9 10 32 33 34 35 36 56 57
    RPAREN (279) 7 8 9 10 32 33 34 35 36 56 57
    LCURL (280) 18
    RCURL (281) 16 17
    LTHIRD (282) 24 26 41
    RTHIRD (283) 24 26 41
    COMMA (284) 12 13 23 24 64
    SEMICOLON (285) 9 10 19 36 37 38 39
    ID (286) 7 8 9 10 12 14 23 24 25 26 36 40 41 56
    CONST_INT (287) 24 26 58
    CONST_FLOAT (288) 59
    CONST_CHAR (289)
    STRING (290)
    PRINTLN (291) 36
    DECOP (292) 61
    LOW_ELSE (293)


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    start (40)
        on left: 1
        on right: 0
    program (41)
        on left: 2 3
        on right: 1 2
    unit (42)
        on left: 4 5 6
        on right: 2 3
    func_start (43)
        on left: 7 8
        on right: 11
    func_declaration (44)
        on left: 9 10
        on right: 5
    func_definition (45)
        on left: 11
        on right: 6
    parameter_list (46)
        on left: 12 13 14 15
        on right: 7 9 12 13
    compound_statement (47)
        on left: 16 17
        on right: 11 31
    compound_statement_start (48)
        on left: 18
        on right: 16 17
    var_declaration (49)
        on left: 19
        on right: 4 29
    type_specifier (50)
        on left: 20 21 22
        on right: 7 8 9 10 12 13 14 15 19
    declaration_list (51)
        on left: 23 24 25 26
        on right: 19 23 24
    statements (52)
        on left: 27 28
        on right: 16 28
    statement (53)
        on left: 29 30 31 32 33 34 35 36 37
        on right: 27 28 32 33 34 35
    expression_statement (54)
        on left: 38 39
        on right: 30 32
    variable (55)
        on left: 40 41
        on right: 43 55 60 61
    expression (56)
        on left: 42 43
        on right: 32 33 34 35 37 39 41 57
    logic_expression (57)
        on left: 44 45
        on right: 42 43 64 65
    rel_expression (58)
        on left: 46 47
        on right: 44 45
    simple_expression (59)
        on left: 48 49
        on right: 46 47 49
    term (60)
        on left: 50 51
        on right: 48 49 51
    unary_expression (61)
        on left: 52 53 54
        on right: 50 51 52 53
    factor (62)
        on left: 55 56 57 58 59 60 61
        on right: 54
    argument_list (63)
        on left: 62 63
        on right: 56
    arguments (64)
        on left: 64 65
        on right: 62 64


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_start        go to state 7
    func_declaration  go to state 8
    func_definition   go to state 9
    var_declaration   go to state 10
    type_specifier    go to state 11


State 1

   20 type_specifier: INT .

    $default  reduce using rule 20 (type_specifier)


State 2

   21 type_specifier: FLOAT .

    $default  reduce using rule 21 (type_specifier)


State 3

   22 type_specifier: VOID .

    $default  reduce using rule 22 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 12


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 13
    func_start        go to state 7
    func_declaration  go to state 8
    func_definition   go to state 9
    var_declaration   go to state 10
    type_specifier    go to state 11


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

   11 func_definition: func_start . compound_statement

    LCURL  shift, and go to state 14

    compound_statement        go to state 15
    compound_statement_start  go to state 16


State 8

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 9

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 10

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 11

    7 func_start: type_specifier . ID LPAREN parameter_list RPAREN
    8           | type_specifier . ID LPAREN RPAREN
    9 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
   10                 | type_specifier . ID LPAREN RPAREN SEMICOLON
   19 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 17

    declaration_list  go to state 18


State 12

    0 $accept: start $end .

    $default  accept


State 13

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 14

   18 compound_statement_start: LCURL .

    $default  reduce using rule 18 (compound_statement_start)


State 15

   11 func_definition: func_start compound_statement .

    $default  reduce using rule 11 (func_definition)


State 16

   16 compound_statement: compound_statement_start . statements RCURL
   17                   | compound_statement_start . RCURL

    IF           shift, and go to state 19
    FOR          shift, and go to state 20
    WHILE        shift, and go to state 21
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 22
    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    LCURL        shift, and go to state 14
    RCURL        shift, and go to state 26
    SEMICOLON    shift, and go to state 27
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30
    PRINTLN      shift, and go to state 31

    compound_statement        go to state 32
    compound_statement_start  go to state 16
    var_declaration           go to state 33
    type_specifier            go to state 34
    statements                go to state 35
    statement                 go to state 36
    expression_statement      go to state 37
    variable                  go to state 38
    expression                go to state 39
    logic_expression          go to state 40
    rel_expression            go to state 41
    simple_expression         go to state 42
    term                      go to state 43
    unary_expression          go to state 44
    factor                    go to state 45


State 17

    7 func_start: type_specifier ID . LPAREN parameter_list RPAREN
    8           | type_specifier ID . LPAREN RPAREN
    9 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
   10                 | type_specifier ID . LPAREN RPAREN SEMICOLON
   25 declaration_list: ID .
   26                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 46
    LTHIRD  shift, and go to state 47

    $default  reduce using rule 25 (declaration_list)


State 18

   19 var_declaration: type_specifier declaration_list . SEMICOLON
   23 declaration_list: declaration_list . COMMA ID
   24                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 48
    SEMICOLON  shift, and go to state 49


State 19

   33 statement: IF . LPAREN expression RPAREN statement
   34          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 50


State 20

   32 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 51


State 21

   35 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 52


State 22

   37 statement: RETURN . expression SEMICOLON

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    variable           go to state 38
    expression         go to state 53
    logic_expression   go to state 40
    rel_expression     go to state 41
    simple_expression  go to state 42
    term               go to state 43
    unary_expression   go to state 44
    factor             go to state 45


State 23

   52 unary_expression: ADDOP . unary_expression

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    variable          go to state 54
    unary_expression  go to state 55
    factor            go to state 45


State 24

   53 unary_expression: NOT . unary_expression

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    variable          go to state 54
    unary_expression  go to state 56
    factor            go to state 45


State 25

   57 factor: LPAREN . expression RPAREN

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    variable           go to state 38
    expression         go to state 57
    logic_expression   go to state 40
    rel_expression     go to state 41
    simple_expression  go to state 42
    term               go to state 43
    unary_expression   go to state 44
    factor             go to state 45


State 26

   17 compound_statement: compound_statement_start RCURL .

    $default  reduce using rule 17 (compound_statement)


State 27

   38 expression_statement: SEMICOLON .

    $default  reduce using rule 38 (expression_statement)


State 28

   40 variable: ID .
   41         | ID . LTHIRD expression RTHIRD
   56 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 58
    LTHIRD  shift, and go to state 59

    $default  reduce using rule 40 (variable)


State 29

   58 factor: CONST_INT .

    $default  reduce using rule 58 (factor)


State 30

   59 factor: CONST_FLOAT .

    $default  reduce using rule 59 (factor)


State 31

   36 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 60


State 32

   31 statement: compound_statement .

    $default  reduce using rule 31 (statement)


State 33

   29 statement: var_declaration .

    $default  reduce using rule 29 (statement)


State 34

   19 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 61

    declaration_list  go to state 18


State 35

   16 compound_statement: compound_statement_start statements . RCURL
   28 statements: statements . statement

    IF           shift, and go to state 19
    FOR          shift, and go to state 20
    WHILE        shift, and go to state 21
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 22
    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    LCURL        shift, and go to state 14
    RCURL        shift, and go to state 62
    SEMICOLON    shift, and go to state 27
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30
    PRINTLN      shift, and go to state 31

    compound_statement        go to state 32
    compound_statement_start  go to state 16
    var_declaration           go to state 33
    type_specifier            go to state 34
    statement                 go to state 63
    expression_statement      go to state 37
    variable                  go to state 38
    expression                go to state 39
    logic_expression          go to state 40
    rel_expression            go to state 41
    simple_expression         go to state 42
    term                      go to state 43
    unary_expression          go to state 44
    factor                    go to state 45


State 36

   27 statements: statement .

    $default  reduce using rule 27 (statements)


State 37

   30 statement: expression_statement .

    $default  reduce using rule 30 (statement)


State 38

   43 expression: variable . ASSIGNOP logic_expression
   55 factor: variable .
   60       | variable . INCOP
   61       | variable . DECOP

    INCOP     shift, and go to state 64
    ASSIGNOP  shift, and go to state 65
    DECOP     shift, and go to state 66

    $default  reduce using rule 55 (factor)


State 39

   39 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 40

   42 expression: logic_expression .

    $default  reduce using rule 42 (expression)


State 41

   44 logic_expression: rel_expression .
   45                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 68

    $default  reduce using rule 44 (logic_expression)


State 42

   46 rel_expression: simple_expression .
   47               | simple_expression . RELOP simple_expression
   49 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 69
    RELOP  shift, and go to state 70

    $default  reduce using rule 46 (rel_expression)


State 43

   48 simple_expression: term .
   51 term: term . MULOP unary_expression

    MULOP  shift, and go to state 71

    $default  reduce using rule 48 (simple_expression)


State 44

   50 term: unary_expression .

    $default  reduce using rule 50 (term)


State 45

   54 unary_expression: factor .

    $default  reduce using rule 54 (unary_expression)


State 46

    7 func_start: type_specifier ID LPAREN . parameter_list RPAREN
    8           | type_specifier ID LPAREN . RPAREN
    9 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN . RPAREN SEMICOLON

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 72

    parameter_list  go to state 73
    type_specifier  go to state 74


State 47

   26 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 75


State 48

   23 declaration_list: declaration_list COMMA . ID
   24                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 76


State 49

   19 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 19 (var_declaration)


State 50

   33 statement: IF LPAREN . expression RPAREN statement
   34          | IF LPAREN . expression RPAREN statement ELSE statement

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    variable           go to state 38
    expression         go to state 77
    logic_expression   go to state 40
    rel_expression     go to state 41
    simple_expression  go to state 42
    term               go to state 43
    unary_expression   go to state 44
    factor             go to state 45


State 51

   32 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    SEMICOLON    shift, and go to state 27
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    expression_statement  go to state 78
    variable              go to state 38
    expression            go to state 39
    logic_expression      go to state 40
    rel_expression        go to state 41
    simple_expression     go to state 42
    term                  go to state 43
    unary_expression      go to state 44
    factor                go to state 45


State 52

   35 statement: WHILE LPAREN . expression RPAREN statement

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    variable           go to state 38
    expression         go to state 79
    logic_expression   go to state 40
    rel_expression     go to state 41
    simple_expression  go to state 42
    term               go to state 43
    unary_expression   go to state 44
    factor             go to state 45


State 53

   37 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 80


State 54

   55 factor: variable .
   60       | variable . INCOP
   61       | variable . DECOP

    INCOP  shift, and go to state 64
    DECOP  shift, and go to state 66

    $default  reduce using rule 55 (factor)


State 55

   52 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 52 (unary_expression)


State 56

   53 unary_expression: NOT unary_expression .

    $default  reduce using rule 53 (unary_expression)


State 57

   57 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 81


State 58

   56 factor: ID LPAREN . argument_list RPAREN

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    $default  reduce using rule 63 (argument_list)

    variable           go to state 54
    logic_expression   go to state 82
    rel_expression     go to state 41
    simple_expression  go to state 42
    term               go to state 43
    unary_expression   go to state 44
    factor             go to state 45
    argument_list      go to state 83
    arguments          go to state 84


State 59

   41 variable: ID LTHIRD . expression RTHIRD

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    variable           go to state 38
    expression         go to state 85
    logic_expression   go to state 40
    rel_expression     go to state 41
    simple_expression  go to state 42
    term               go to state 43
    unary_expression   go to state 44
    factor             go to state 45


State 60

   36 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 86


State 61

   25 declaration_list: ID .
   26                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 47

    $default  reduce using rule 25 (declaration_list)


State 62

   16 compound_statement: compound_statement_start statements RCURL .

    $default  reduce using rule 16 (compound_statement)


State 63

   28 statements: statements statement .

    $default  reduce using rule 28 (statements)


State 64

   60 factor: variable INCOP .

    $default  reduce using rule 60 (factor)


State 65

   43 expression: variable ASSIGNOP . logic_expression

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    variable           go to state 54
    logic_expression   go to state 87
    rel_expression     go to state 41
    simple_expression  go to state 42
    term               go to state 43
    unary_expression   go to state 44
    factor             go to state 45


State 66

   61 factor: variable DECOP .

    $default  reduce using rule 61 (factor)


State 67

   39 expression_statement: expression SEMICOLON .

    $default  reduce using rule 39 (expression_statement)


State 68

   45 logic_expression: rel_expression LOGICOP . rel_expression

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    variable           go to state 54
    rel_expression     go to state 88
    simple_expression  go to state 42
    term               go to state 43
    unary_expression   go to state 44
    factor             go to state 45


State 69

   49 simple_expression: simple_expression ADDOP . term

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    variable          go to state 54
    term              go to state 89
    unary_expression  go to state 44
    factor            go to state 45


State 70

   47 rel_expression: simple_expression RELOP . simple_expression

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    variable           go to state 54
    simple_expression  go to state 90
    term               go to state 43
    unary_expression   go to state 44
    factor             go to state 45


State 71

   51 term: term MULOP . unary_expression

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    variable          go to state 54
    unary_expression  go to state 91
    factor            go to state 45


State 72

    8 func_start: type_specifier ID LPAREN RPAREN .
   10 func_declaration: type_specifier ID LPAREN RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 92

    $default  reduce using rule 8 (func_start)


State 73

    7 func_start: type_specifier ID LPAREN parameter_list . RPAREN
    9 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
   12 parameter_list: parameter_list . COMMA type_specifier ID
   13               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 93
    COMMA   shift, and go to state 94


State 74

   14 parameter_list: type_specifier . ID
   15               | type_specifier .

    ID  shift, and go to state 95

    $default  reduce using rule 15 (parameter_list)


State 75

   26 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 96


State 76

   23 declaration_list: declaration_list COMMA ID .
   24                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 97

    $default  reduce using rule 23 (declaration_list)


State 77

   33 statement: IF LPAREN expression . RPAREN statement
   34          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 98


State 78

   32 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    SEMICOLON    shift, and go to state 27
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    expression_statement  go to state 99
    variable              go to state 38
    expression            go to state 39
    logic_expression      go to state 40
    rel_expression        go to state 41
    simple_expression     go to state 42
    term                  go to state 43
    unary_expression      go to state 44
    factor                go to state 45


State 79

   35 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 100


State 80

   37 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 37 (statement)


State 81

   57 factor: LPAREN expression RPAREN .

    $default  reduce using rule 57 (factor)


State 82

   65 arguments: logic_expression .

    $default  reduce using rule 65 (arguments)


State 83

   56 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 101


State 84

   62 argument_list: arguments .
   64 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 102

    $default  reduce using rule 62 (argument_list)


State 85

   41 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 103


State 86

   36 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 104


State 87

   43 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 43 (expression)


State 88

   45 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 45 (logic_expression)


State 89

   49 simple_expression: simple_expression ADDOP term .
   51 term: term . MULOP unary_expression

    MULOP  shift, and go to state 71

    $default  reduce using rule 49 (simple_expression)


State 90

   47 rel_expression: simple_expression RELOP simple_expression .
   49 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 69

    $default  reduce using rule 47 (rel_expression)


State 91

   51 term: term MULOP unary_expression .

    $default  reduce using rule 51 (term)


State 92

   10 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 10 (func_declaration)


State 93

    7 func_start: type_specifier ID LPAREN parameter_list RPAREN .
    9 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 105

    $default  reduce using rule 7 (func_start)


State 94

   12 parameter_list: parameter_list COMMA . type_specifier ID
   13               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 106


State 95

   14 parameter_list: type_specifier ID .

    $default  reduce using rule 14 (parameter_list)


State 96

   26 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 26 (declaration_list)


State 97

   24 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 107


State 98

   33 statement: IF LPAREN expression RPAREN . statement
   34          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 19
    FOR          shift, and go to state 20
    WHILE        shift, and go to state 21
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 22
    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    LCURL        shift, and go to state 14
    SEMICOLON    shift, and go to state 27
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30
    PRINTLN      shift, and go to state 31

    compound_statement        go to state 32
    compound_statement_start  go to state 16
    var_declaration           go to state 33
    type_specifier            go to state 34
    statement                 go to state 108
    expression_statement      go to state 37
    variable                  go to state 38
    expression                go to state 39
    logic_expression          go to state 40
    rel_expression            go to state 41
    simple_expression         go to state 42
    term                      go to state 43
    unary_expression          go to state 44
    factor                    go to state 45


State 99

   32 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    variable           go to state 38
    expression         go to state 109
    logic_expression   go to state 40
    rel_expression     go to state 41
    simple_expression  go to state 42
    term               go to state 43
    unary_expression   go to state 44
    factor             go to state 45


State 100

   35 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 19
    FOR          shift, and go to state 20
    WHILE        shift, and go to state 21
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 22
    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    LCURL        shift, and go to state 14
    SEMICOLON    shift, and go to state 27
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30
    PRINTLN      shift, and go to state 31

    compound_statement        go to state 32
    compound_statement_start  go to state 16
    var_declaration           go to state 33
    type_specifier            go to state 34
    statement                 go to state 110
    expression_statement      go to state 37
    variable                  go to state 38
    expression                go to state 39
    logic_expression          go to state 40
    rel_expression            go to state 41
    simple_expression         go to state 42
    term                      go to state 43
    unary_expression          go to state 44
    factor                    go to state 45


State 101

   56 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 56 (factor)


State 102

   64 arguments: arguments COMMA . logic_expression

    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30

    variable           go to state 54
    logic_expression   go to state 111
    rel_expression     go to state 41
    simple_expression  go to state 42
    term               go to state 43
    unary_expression   go to state 44
    factor             go to state 45


State 103

   41 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 41 (variable)


State 104

   36 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 112


State 105

    9 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 9 (func_declaration)


State 106

   12 parameter_list: parameter_list COMMA type_specifier . ID
   13               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 113

    $default  reduce using rule 13 (parameter_list)


State 107

   24 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 114


State 108

   33 statement: IF LPAREN expression RPAREN statement .
   34          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 115

    $default  reduce using rule 33 (statement)


State 109

   32 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 116


State 110

   35 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 35 (statement)


State 111

   64 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 64 (arguments)


State 112

   36 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 36 (statement)


State 113

   12 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 12 (parameter_list)


State 114

   24 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 24 (declaration_list)


State 115

   34 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 19
    FOR          shift, and go to state 20
    WHILE        shift, and go to state 21
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 22
    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    LCURL        shift, and go to state 14
    SEMICOLON    shift, and go to state 27
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30
    PRINTLN      shift, and go to state 31

    compound_statement        go to state 32
    compound_statement_start  go to state 16
    var_declaration           go to state 33
    type_specifier            go to state 34
    statement                 go to state 117
    expression_statement      go to state 37
    variable                  go to state 38
    expression                go to state 39
    logic_expression          go to state 40
    rel_expression            go to state 41
    simple_expression         go to state 42
    term                      go to state 43
    unary_expression          go to state 44
    factor                    go to state 45


State 116

   32 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 19
    FOR          shift, and go to state 20
    WHILE        shift, and go to state 21
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 22
    ADDOP        shift, and go to state 23
    NOT          shift, and go to state 24
    LPAREN       shift, and go to state 25
    LCURL        shift, and go to state 14
    SEMICOLON    shift, and go to state 27
    ID           shift, and go to state 28
    CONST_INT    shift, and go to state 29
    CONST_FLOAT  shift, and go to state 30
    PRINTLN      shift, and go to state 31

    compound_statement        go to state 32
    compound_statement_start  go to state 16
    var_declaration           go to state 33
    type_specifier            go to state 34
    statement                 go to state 118
    expression_statement      go to state 37
    variable                  go to state 38
    expression                go to state 39
    logic_expression          go to state 40
    rel_expression            go to state 41
    simple_expression         go to state 42
    term                      go to state 43
    unary_expression          go to state 44
    factor                    go to state 45


State 117

   34 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 34 (statement)


State 118

   32 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 32 (statement)
